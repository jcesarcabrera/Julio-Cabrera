<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:BW="java://com.tibco.pe.core.JavaCustomXPATHFunctions" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns13="http://www.tibco.com/DaviviendaHCS/Hybrid_Card_Davivienda/Logs_Management/Schemas/AUDIT">
    <pd:name>Hybrid_Card_Davivienda.Core/Validations/Get_Validations_FromFCS/Implementation/Get_Validations Test.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>27</pd:startX>
    <pd:startY>35</pd:startY>
    <pd:returnBindings>
        <ZipFile>
            <ZipFile_FullName>
                <xsl:value-of select="$WriteWS/ns12:WriteActivityOutputClass/fileInfo/fullName"/>
            </ZipFile_FullName>
            <ZipFile_FileName>
                <xsl:value-of select="$WriteWS/ns12:WriteActivityOutputClass/fileInfo/fileName"/>
            </ZipFile_FileName>
            <Rest_StatusCode>
                <xsl:value-of select="$Invoke-FCS/ns1:RESTOutput/StatusCode"/>
            </Rest_StatusCode>
            <Rest_Response_ReasonPhrase>
                <xsl:value-of select="$Invoke-FCS/ns1:RESTOutput/ReasonPhrase"/>
            </Rest_Response_ReasonPhrase>
        </ZipFile>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="ZipFile">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="ZipFile_FullName" type="xsd:string"/>
                    <xsd:element name="ZipFile_FileName" type="xsd:string"/>
                    <xsd:element name="Rest_StatusCode" type="xsd:string"/>
                    <xsd:element name="Rest_Response_ReasonPhrase" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>482</pd:endX>
    <pd:endY>35</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1472479389063</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>371</pd:x>
        <pd:y>120</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ClaimData">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>129</pd:x>
        <pd:y>35</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ValidateIntputEnable>true</ValidateIntputEnable>
            <ActivityInputEditor>
                <xsd:element name="Input">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="ClaimDate" type="xsd:string"/>
                            <xsd:element name="RequestID" type="xsd:string"/>
                            <xsd:element name="BankID" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns1:ActivityInputClass>
                <Input>
                    <ClaimDate>
                        <xsl:value-of select="'20160907'"/>
                    </ClaimDate>
                    <RequestID>
                        <xsl:value-of select="'20160907235959'"/>
                    </RequestID>
                    <BankID>
                        <xsl:value-of select="'003'"/>
                    </BankID>
                </Input>
            </ns1:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke FCS">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>247</pd:x>
        <pd:y>35</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>Binary</restResponseType>
            <authChoiceUI>Basic Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <username>%%Connections/FCS_Service/User%%</username>
            <password>%%Connections/FCS_Service/Password%%</password>
            <restURI/>
            <richOutputEnableUI>true</richOutputEnableUI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="set-cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="content-length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="content-encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="content-range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="last-modifie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="filenm" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-powered-by" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="resmsg" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="rescd" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns1:ActivityInput>
                <URI>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Connections/FCS_Service/Request_URI/ClaimData"/>
                </URI>
                <Timeout>
                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/Connections/FCS_Service/TimeOut"/>
                </Timeout>
                <ns1:Parameters>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="'application/json'"/>
                            </type>
                            <content>
                                <xsl:value-of select="$ClaimData/ns1:ActivityOutputClass/jsonString"/>
                            </content>
                        </Text>
                    </Body>
                </ns1:Parameters>
            </ns1:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>473</pd:x>
        <pd:y>120</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns3:ActivityInput>
                <message>
                    <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                </message>
                <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </ns3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="WriteWS">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>354</pd:x>
        <pd:y>35</pd:y>
        <config>
            <encoding>binary</encoding>
            <compressFile>None</compressFile>
            <append>false</append>
            <createMissingDirectories>true</createMissingDirectories>
        </config>
        <pd:inputBindings>
            <ns12:WriteActivityInputBinaryClass>
                <fileName>
                    <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/RecaudoBogota/Validations_Request/Validations_File_Local_Zipped_Path, $Invoke-FCS/ns1:RESTOutput/ns1:header/filenm)"/>
                </fileName>
                <binaryContent>
                    <xsl:value-of select="$Invoke-FCS/ns1:RESTOutput/body/binaryContent"/>
                </binaryContent>
            </ns12:WriteActivityInputBinaryClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ClaimData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke FCS</pd:from>
        <pd:to>WriteWS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ClaimData</pd:from>
        <pd:to>Invoke FCS</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>WriteWS</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>