<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/CommonLE2/namespace/Public/Common/RequestHeader.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns0="www.tibco.com/plugin/Sleep" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://www.recaudo.bogota.com/schemas/CanonicoRB" xmlns:ns12="http://www.tibco.com/CommonLE2/namespace/Public/Logging/LogRequest.xsd" xmlns:ns13="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx="http://www.tibco.com/pe/DeployedVarsType">
    <xsd:import namespace="http://www.recaudo.bogota.com/schemas/CanonicoRB" schemaLocation="/SharedResources/Schemas/CanonicoRecaudoBogota.xsd"/>
    <pd:name>GetNoveltysFromBank/GetReplyDebitList.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="rqid" type="xsd:string"/>
                    <xsd:element name="rqdt" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>31</pd:startX>
    <pd:startY>77</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>358</pd:endX>
    <pd:endY>178</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <Retries>
            <xsd:element name="noRetry" type="xsd:int"/>
        </Retries>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1433968084241</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>207</pd:x>
        <pd:y>183</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CreaZIP">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>313</pd:x>
        <pd:y>77</pd:y>
        <config>
            <encoding>binary</encoding>
            <compressFile>None</compressFile>
            <createMissingDirectories>true</createMissingDirectories>
        </config>
        <pd:inputBindings>
            <ns13:WriteActivityInputBinaryClass>
                <fileName>
                    <xsl:value-of select="concat('C:\RBFiles\DebitListResult\',$Invoke-REST-API/ns:RESTOutput/ns:header/filenm)"/>
                </fileName>
                <binaryContent>
                    <xsl:value-of select="$Invoke-REST-API/ns:RESTOutput/body/binaryContent"/>
                </binaryContent>
            </ns13:WriteActivityInputBinaryClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke REST API">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>223</pd:x>
        <pd:y>77</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>Binary</restResponseType>
            <authChoiceUI>Basic Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <username>restuser</username>
            <password>#!Hevcs7/PlAvcvG35MqaaQqcyY3wxDKchEER2DbCkudc=</password>
            <restURI/>
            <richOutputEnableUI>true</richOutputEnableUI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="content-length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="filenm" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="x-powered-by" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="set-cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="requestid" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="rescd" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="resmsg" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <URI>
                    <xsl:value-of select="'http://10.50.98.21:81/InterfaceServer/rest/dailydl/download'"/>
                </URI>
                <Timeout>
                    <xsl:value-of select="180000"/>
                </Timeout>
                <ns:Parameters>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="'application/json'"/>
                            </type>
                            <content>
                                <xsl:value-of select="$Render-JSON/ns:ActivityOutputClass/jsonString"/>
                            </content>
                        </Text>
                    </Body>
                </ns:Parameters>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>112</pd:x>
        <pd:y>77</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ValidateIntputEnable>true</ValidateIntputEnable>
            <ActivityInputEditor>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="RequestID" type="xsd:string"/>
                            <xsd:element name="RequestDateTime" type="xsd:string"/>
                            <xsd:element name="BankID" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <root>
                    <RequestID>
                        <xsl:value-of select="$Start/root/rqid"/>
                    </RequestID>
                    <RequestDateTime>
                        <xsl:value-of select="{--concat(tib:substring-before-last(concat(tib:format-dateTime('yyyyMMddHH', tib:add-to-dateTime(current-dateTime(), 0,0, 0,0, 0,0)),&quot;0000&quot;), '0000'), '3000')--}&#xA;$Start/root/rqdt"/>
                    </RequestDateTime>
                    <BankID>
                        <xsl:value-of select="'003'"/>
                    </BankID>
                </root>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>Invoke REST API</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CreaZIP</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke REST API</pd:from>
        <pd:to>CreaZIP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>